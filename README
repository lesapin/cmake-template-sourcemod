Create SourceMod projects in Visual Studio 2022 with Windows and compile them in WSL2 for Linux servers.  

Prerequisites: A working WSL version 2 with a full development environment
1. Install Windows Subsystem for Linux. Check that the installed WSL is version 2 using "wsl --list -v".

2. In the (Debian based) Linux, install CMake and the development environment including multiarch support  with "sudo dpkg --add-architecture i386; sudo apt-get update && sudo apt-get upgrade" and "sudo apt-get install build-essential cmake ninja-build rsync zip gcc-multilib g++-multilib"

In Visual Studio 2022:
3. In Visual Studio, open the folder where the top level _CMakeLists.txt_ is located. 

4. Under Tools > CMake > General, select "Always use CMake presets", close the current folder and reopen it again. This should make the connections and configuration managers appear in the top bar. Refer to [1] if you have any problems.

5. Initialize your project by cloning this repository: either by using PowerShell or through Visual Studio's "Git -> Clone Repository"

You need to move the SourceMod SDK (and optionally any other SDK) into the top level build folder inside your WSL installation. For example, if the user on Linux is called "admin" then the folder should be located by default at /home/admin/.vs/sourcemod

If your extension isn't loading because of an outdated GLIBCXX_* version, you can follow the instructions in [2]. Renaming the stdc++ library in .../sdk2013/bin/libstdc++.so.6 will probably fix your issue.

[1] https://learn.microsoft.com/en-us/cpp/build/walkthrough-build-debug-wsl2?view=msvc-170
[2] https://wiki.alliedmods.net/User:Nosoop/Guide/Game_Server_Configuration#Linux_extension_failing_to_load_on_outdated_GLIBCXX_.2A_version
